{
 "Resources": {
  "ProductsTable241ADBFF": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "ProductsTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductsTable/Resource"
   }
  },
  "StockTable7710DF9D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "product_id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "product_id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "StockTable"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/StockTable/Resource"
   }
  },
  "CreateProductServiceRoleF684A142": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CreateProduct/ServiceRole/Resource"
   }
  },
  "CreateProductServiceRoleDefaultPolicyBADCEB34": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProductsTable241ADBFF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StockTable7710DF9D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateProductServiceRoleDefaultPolicyBADCEB34",
    "Roles": [
     {
      "Ref": "CreateProductServiceRoleF684A142"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CreateProduct/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateProductD05B97E4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4.zip"
    },
    "Environment": {
     "Variables": {
      "PRODUCTS_TABLE": {
       "Ref": "ProductsTable241ADBFF"
      },
      "STOCK_TABLE": {
       "Ref": "StockTable7710DF9D"
      }
     }
    },
    "Handler": "createProduct.handler",
    "Role": {
     "Fn::GetAtt": [
      "CreateProductServiceRoleF684A142",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "CreateProductServiceRoleDefaultPolicyBADCEB34",
    "CreateProductServiceRoleF684A142"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CreateProduct/Resource",
    "aws:asset:path": "asset.1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetProductsListServiceRole773AEB2D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsList/ServiceRole/Resource"
   }
  },
  "GetProductsListServiceRoleDefaultPolicy99FF8B2C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProductsTable241ADBFF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "dynamodb:Scan",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProductsTable241ADBFF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StockTable7710DF9D",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetProductsListServiceRoleDefaultPolicy99FF8B2C",
    "Roles": [
     {
      "Ref": "GetProductsListServiceRole773AEB2D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsList/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetProductsList379A1E5D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4.zip"
    },
    "Environment": {
     "Variables": {
      "PRODUCTS_TABLE": {
       "Ref": "ProductsTable241ADBFF"
      }
     }
    },
    "Handler": "getProductList.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductsListServiceRole773AEB2D",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetProductsListServiceRoleDefaultPolicy99FF8B2C",
    "GetProductsListServiceRole773AEB2D"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsList/Resource",
    "aws:asset:path": "asset.1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetProductByIdServiceRole3F038783": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductById/ServiceRole/Resource"
   }
  },
  "GetProductByIdServiceRoleDefaultPolicy30F63AF2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProductsTable241ADBFF",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ProductsTable241ADBFF",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "StockTable7710DF9D",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetProductByIdServiceRoleDefaultPolicy30F63AF2",
    "Roles": [
     {
      "Ref": "GetProductByIdServiceRole3F038783"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductById/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetProductById57FA4930": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4.zip"
    },
    "Environment": {
     "Variables": {
      "PRODUCTS_TABLE": {
       "Ref": "ProductsTable241ADBFF"
      }
     }
    },
    "Handler": "getProductById.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductByIdServiceRole3F038783",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetProductByIdServiceRoleDefaultPolicy30F63AF2",
    "GetProductByIdServiceRole3F038783"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductById/Resource",
    "aws:asset:path": "asset.1ce179557eba9cfb4f7572b02bc7296c7123d4eee15b0d7b7dd26e1109cd7ac4",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProductApi63AD160A": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Product Service"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Resource"
   }
  },
  "ProductApiDeploymentAB5FBC6303f6b7c7b041f8144cdd5225992a8bcd": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "DependsOn": [
    "ProductApiproductsproductIdGET4D58398D",
    "ProductApiproductsproductIdB46A4F88",
    "ProductApiproductsGET77543127",
    "ProductApiproductsOPTIONSD73AAED9",
    "ProductApiproductsPOST9C864D4A",
    "ProductApiproductsAEC1BAF9"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Deployment/Resource"
   }
  },
  "ProductApiDeploymentStageprod9B123BA2": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ProductApiDeploymentAB5FBC6303f6b7c7b041f8144cdd5225992a8bcd"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/DeploymentStage.prod/Resource"
   }
  },
  "ProductApiproductsAEC1BAF9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductApi63AD160A",
      "RootResourceId"
     ]
    },
    "PathPart": "products",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/Resource"
   }
  },
  "ProductApiproductsOPTIONSD73AAED9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/OPTIONS/Resource"
   }
  },
  "ProductApiproductsGETApiPermissionProductServiceStackProductApiF5235674GETproductsF528F9ED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsList379A1E5D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/",
       {
        "Ref": "ProductApiDeploymentStageprod9B123BA2"
       },
       "/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/ApiPermission.ProductServiceStackProductApiF5235674.GET..products"
   }
  },
  "ProductApiproductsGETApiPermissionTestProductServiceStackProductApiF5235674GETproductsF5A30183": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsList379A1E5D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/test-invoke-stage/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/ApiPermission.Test.ProductServiceStackProductApiF5235674.GET..products"
   }
  },
  "ProductApiproductsGET77543127": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductsList379A1E5D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/Resource"
   }
  },
  "ProductApiproductsPOSTApiPermissionProductServiceStackProductApiF5235674POSTproducts24240D6A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateProductD05B97E4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/",
       {
        "Ref": "ProductApiDeploymentStageprod9B123BA2"
       },
       "/POST/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/POST/ApiPermission.ProductServiceStackProductApiF5235674.POST..products"
   }
  },
  "ProductApiproductsPOSTApiPermissionTestProductServiceStackProductApiF5235674POSTproductsBE3FCBBF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateProductD05B97E4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/test-invoke-stage/POST/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/POST/ApiPermission.Test.ProductServiceStackProductApiF5235674.POST..products"
   }
  },
  "ProductApiproductsPOST9C864D4A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "201"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateProductD05B97E4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "201"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/POST/Resource"
   }
  },
  "ProductApiproductsproductIdB46A4F88": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "PathPart": "{productId}",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/Resource"
   }
  },
  "ProductApiproductsproductIdGETApiPermissionProductServiceStackProductApiF5235674GETproductsproductIdCA324251": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductById57FA4930",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/",
       {
        "Ref": "ProductApiDeploymentStageprod9B123BA2"
       },
       "/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/ApiPermission.ProductServiceStackProductApiF5235674.GET..products.{productId}"
   }
  },
  "ProductApiproductsproductIdGETApiPermissionTestProductServiceStackProductApiF5235674GETproductsproductIdE65B612C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductById57FA4930",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/test-invoke-stage/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/ApiPermission.Test.ProductServiceStackProductApiF5235674.GET..products.{productId}"
   }
  },
  "ProductApiproductsproductIdGET4D58398D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductById57FA4930",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsproductIdB46A4F88"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1WTW/bMAz9LdWxUL1+7LDllnQbUHTdgiS3ICgYi03U2pIm0S08w/99kCw57rp22IYOKNCDYZmPfBRJifRxdvTufXa4B3fuIBc3B4VcZ82cIL/hcOcuG1ErKLVYZ80C1gUuG2bAkiSp1TnWbNQwBSWyEdtnnFFt/HLOWs7Iq39JWMv/1nDFT69U8N3yAsq1gKz5VKncEy0bZitFsufZghIF2viVa5EAVLfSalWion4/IMTHoXgZNPfZ6rfgczl9Ft6QwJQxv56iLaVzUquWSyizZqZDYcG5qkQxCcUxVqpcGijGea6r6IhHHW8wDnzRPytBwQbFVBcyl+jYaNnck9VjG3VTdhd6mlx0Gt4mokSQb89UIRX2WF+YJ8GneV8DfMkBhoPsN847cTjiiW6hPfLAy0OxEHMCQn9L3GDDvxK/cP6Qry5VLXcnl+AcksvG/sXdSTap8hukCThcrjgYuQHCO6izZoaOxkb67tqtfurGEecf0BS69i6XDRPocitNf6Q4AyPjyiKBVDt1N2xbC/1Zb2QOxZm4F8//l4fgdrvkc4INhtCSaJCEAPIZOl3ZHEMWfY16STcpsb93Bmg7BUvDcfgYmrIciPgF0laLrhpBkuYDkemwKJCKcGNhUAId6uF8O4CKttrK736gDL/OknUSBftFN5BDZwAjz7Ge4bdKWhRsdAWFw8f0OSvDlmbojFYuNhJHQJU73Y0wG+EpWCiR0LrUW2J1Lu6x/CkJ/8dkvcbwGkMiCZexo2jb3fWO/1fDZ8VDb/WdQaqNN/takamo5UoLzK7dm9vj4+zobXa4d+2kPIi/e9mse/8AnrDAQosLAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ProductApiEndpoint760E02C8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ProductApi63AD160A"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ProductApiDeploymentStageprod9B123BA2"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}