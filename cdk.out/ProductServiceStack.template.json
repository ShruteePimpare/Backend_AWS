{
 "Resources": {
  "GetProductsListServiceRole773AEB2D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsList/ServiceRole/Resource"
   }
  },
  "GetProductsList379A1E5D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6bea88964d9c35b1c82210fecb467070ad636f4f3faba72acdb55e2085e24865.zip"
    },
    "Handler": "getProductList.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductsListServiceRole773AEB2D",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetProductsListServiceRole773AEB2D"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsList/Resource",
    "aws:asset:path": "asset.6bea88964d9c35b1c82210fecb467070ad636f4f3faba72acdb55e2085e24865",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetProductsByIdServiceRole71EA7EAD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsById/ServiceRole/Resource"
   }
  },
  "GetProductsByIdD4F59C59": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6bea88964d9c35b1c82210fecb467070ad636f4f3faba72acdb55e2085e24865.zip"
    },
    "Handler": "getProductById.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductsByIdServiceRole71EA7EAD",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "GetProductsByIdServiceRole71EA7EAD"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsById/Resource",
    "aws:asset:path": "asset.6bea88964d9c35b1c82210fecb467070ad636f4f3faba72acdb55e2085e24865",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProductApi63AD160A": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Product Service"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Resource"
   }
  },
  "ProductApiDeploymentAB5FBC63eef5db06c684dd12b1e550156e668ff6": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "DependsOn": [
    "ProductApiproductsproductIdGET4D58398D",
    "ProductApiproductsproductIdB46A4F88",
    "ProductApiproductsGET77543127",
    "ProductApiproductsOPTIONSD73AAED9",
    "ProductApiproductsAEC1BAF9"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Deployment/Resource"
   }
  },
  "ProductApiDeploymentStageprod9B123BA2": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ProductApiDeploymentAB5FBC63eef5db06c684dd12b1e550156e668ff6"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/DeploymentStage.prod/Resource"
   }
  },
  "ProductApiproductsAEC1BAF9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductApi63AD160A",
      "RootResourceId"
     ]
    },
    "PathPart": "products",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/Resource"
   }
  },
  "ProductApiproductsOPTIONSD73AAED9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/OPTIONS/Resource"
   }
  },
  "ProductApiproductsGETApiPermissionProductServiceStackProductApiF5235674GETproductsF528F9ED": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsList379A1E5D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/",
       {
        "Ref": "ProductApiDeploymentStageprod9B123BA2"
       },
       "/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/ApiPermission.ProductServiceStackProductApiF5235674.GET..products"
   }
  },
  "ProductApiproductsGETApiPermissionTestProductServiceStackProductApiF5235674GETproductsF5A30183": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsList379A1E5D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/test-invoke-stage/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/ApiPermission.Test.ProductServiceStackProductApiF5235674.GET..products"
   }
  },
  "ProductApiproductsGET77543127": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductsList379A1E5D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/GET/Resource"
   }
  },
  "ProductApiproductsproductIdB46A4F88": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ProductApiproductsAEC1BAF9"
    },
    "PathPart": "{productId}",
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/Resource"
   }
  },
  "ProductApiproductsproductIdGETApiPermissionProductServiceStackProductApiF5235674GETproductsproductIdCA324251": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsByIdD4F59C59",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/",
       {
        "Ref": "ProductApiDeploymentStageprod9B123BA2"
       },
       "/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/ApiPermission.ProductServiceStackProductApiF5235674.GET..products.{productId}"
   }
  },
  "ProductApiproductsproductIdGETApiPermissionTestProductServiceStackProductApiF5235674GETproductsproductIdE65B612C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsByIdD4F59C59",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductApi63AD160A"
       },
       "/test-invoke-stage/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/ApiPermission.Test.ProductServiceStackProductApiF5235674.GET..products.{productId}"
   }
  },
  "ProductApiproductsproductIdGET4D58398D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductsByIdD4F59C59",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductApiproductsproductIdB46A4F88"
    },
    "RestApiId": {
     "Ref": "ProductApi63AD160A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductApi/Default/products/{productId}/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1UTW/bMAz9LdWxULQ23WHLLekwoNi6BW5vRlCwEuuosSVNlFd4hv/7IFlO0kOHDfs47SSZH898j6Tm4vzNW3F2Ak80k2o3q/W96G8CyB2HJ7rra2juFYj+fWtk0NaUPfOtCbpBtmCnjLMtGFWjz1/SqtEx8J8N3PDLBzPBx/safaOJtDUD19CIvrA1lj0DorZBterYomfOayO1g3oppW1NyLBjTExYJrxcC2vAQIVqbWstNRJblP0zW7f0OXYTK/9Xv0rcI8TA6eIOiDCQWMaD04VYtXKHYQWE5YaD0xUEfIJO9AVSWDodezHePkFzrGb283foats1aELZM4UkvXb7UjkDp/PNYwBtDuG07yEodWs/2kpLqK9UJJMV+pv2ROJQDb8JUGGiMJmOyCYnL5Bs6yUmtdgp2+wtZc8ceNz3zUHYrsGHPcUfeCc1ExC/xrC1alQ9WabJDsGNvmzQJmDl4Uhqm3SnOE7Qhq31+ltcheOvqyl7MqX8285NCxX79QG7Ar+02qNiiweoCV+K56xJJRVIzhrKg0gBQkuX0/LFzo/uNXhoMKCnaTZzd66fofwqCP9Nsf5z+DMc0iCPEMNwWI2UFZclvTlxk7SpYujnNrg2DNxYheKRXn2dz8X5a3F28khaz/LDLorx/A7fMCE8RAYAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ProductApiEndpoint760E02C8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ProductApi63AD160A"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ProductApiDeploymentStageprod9B123BA2"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}