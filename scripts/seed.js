"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const lib_dynamodb_1 = require("@aws-sdk/lib-dynamodb");
const products_1 = require("../lambda/mock/products"); // Adjust path as needed
const PRODUCTS_TABLE = 'products';
const STOCK_TABLE = 'stock';
const client = lib_dynamodb_1.DynamoDBDocumentClient.from(new client_dynamodb_1.DynamoDBClient({}));
const seed = async () => {
    for (const product of products_1.products) {
        const { id, title, description, price } = product;
        const count = Math.floor(Math.random() * 100); // Random stock count for demo
        // Add product
        await client.send(new lib_dynamodb_1.PutCommand({
            TableName: PRODUCTS_TABLE,
            Item: { id, title, description, price },
        }));
        // Add stock
        await client.send(new lib_dynamodb_1.PutCommand({
            TableName: STOCK_TABLE,
            Item: { product_id: id, count },
        }));
        console.log(`Seeded: ${title} with stock ${count}`);
    }
    console.log('✅ Seeding complete!');
};
seed().catch((err) => {
    console.error('❌ Error seeding data:', err);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNlZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4REFBMEQ7QUFDMUQsd0RBQTJFO0FBQzNFLHNEQUFtRCxDQUFDLHdCQUF3QjtBQUU1RSxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUM7QUFDbEMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDO0FBRTVCLE1BQU0sTUFBTSxHQUFHLHFDQUFzQixDQUFDLElBQUksQ0FBQyxJQUFJLGdDQUFjLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUVuRSxNQUFNLElBQUksR0FBRyxLQUFLLElBQUksRUFBRTtJQUN0QixLQUFLLE1BQU0sT0FBTyxJQUFJLG1CQUFRLEVBQUUsQ0FBQztRQUMvQixNQUFNLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLEdBQUcsT0FBTyxDQUFDO1FBQ2xELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsOEJBQThCO1FBRTdFLGNBQWM7UUFDZCxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQ2YsSUFBSSx5QkFBVSxDQUFDO1lBQ2IsU0FBUyxFQUFFLGNBQWM7WUFDekIsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFO1NBQ3hDLENBQUMsQ0FDSCxDQUFDO1FBRUYsWUFBWTtRQUNaLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FDZixJQUFJLHlCQUFVLENBQUM7WUFDYixTQUFTLEVBQUUsV0FBVztZQUN0QixJQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRTtTQUNoQyxDQUFDLENBQ0gsQ0FBQztRQUVGLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxLQUFLLGVBQWUsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQ3JDLENBQUMsQ0FBQztBQUVGLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO0lBQ25CLE9BQU8sQ0FBQyxLQUFLLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDOUMsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbW9EQkNsaWVudCB9IGZyb20gJ0Bhd3Mtc2RrL2NsaWVudC1keW5hbW9kYic7XHJcbmltcG9ydCB7IER5bmFtb0RCRG9jdW1lbnRDbGllbnQsIFB1dENvbW1hbmQgfSBmcm9tICdAYXdzLXNkay9saWItZHluYW1vZGInO1xyXG5pbXBvcnQgeyBwcm9kdWN0cyB9IGZyb20gJy4uL2xhbWJkYS9tb2NrL3Byb2R1Y3RzJzsgLy8gQWRqdXN0IHBhdGggYXMgbmVlZGVkXHJcblxyXG5jb25zdCBQUk9EVUNUU19UQUJMRSA9ICdwcm9kdWN0cyc7XHJcbmNvbnN0IFNUT0NLX1RBQkxFID0gJ3N0b2NrJztcclxuXHJcbmNvbnN0IGNsaWVudCA9IER5bmFtb0RCRG9jdW1lbnRDbGllbnQuZnJvbShuZXcgRHluYW1vREJDbGllbnQoe30pKTtcclxuXHJcbmNvbnN0IHNlZWQgPSBhc3luYyAoKSA9PiB7XHJcbiAgZm9yIChjb25zdCBwcm9kdWN0IG9mIHByb2R1Y3RzKSB7XHJcbiAgICBjb25zdCB7IGlkLCB0aXRsZSwgZGVzY3JpcHRpb24sIHByaWNlIH0gPSBwcm9kdWN0O1xyXG4gICAgY29uc3QgY291bnQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApOyAvLyBSYW5kb20gc3RvY2sgY291bnQgZm9yIGRlbW9cclxuXHJcbiAgICAvLyBBZGQgcHJvZHVjdFxyXG4gICAgYXdhaXQgY2xpZW50LnNlbmQoXHJcbiAgICAgIG5ldyBQdXRDb21tYW5kKHtcclxuICAgICAgICBUYWJsZU5hbWU6IFBST0RVQ1RTX1RBQkxFLFxyXG4gICAgICAgIEl0ZW06IHsgaWQsIHRpdGxlLCBkZXNjcmlwdGlvbiwgcHJpY2UgfSxcclxuICAgICAgfSlcclxuICAgICk7XHJcblxyXG4gICAgLy8gQWRkIHN0b2NrXHJcbiAgICBhd2FpdCBjbGllbnQuc2VuZChcclxuICAgICAgbmV3IFB1dENvbW1hbmQoe1xyXG4gICAgICAgIFRhYmxlTmFtZTogU1RPQ0tfVEFCTEUsXHJcbiAgICAgICAgSXRlbTogeyBwcm9kdWN0X2lkOiBpZCwgY291bnQgfSxcclxuICAgICAgfSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc29sZS5sb2coYFNlZWRlZDogJHt0aXRsZX0gd2l0aCBzdG9jayAke2NvdW50fWApO1xyXG4gIH1cclxuXHJcbiAgY29uc29sZS5sb2coJ+KchSBTZWVkaW5nIGNvbXBsZXRlIScpO1xyXG59O1xyXG5cclxuc2VlZCgpLmNhdGNoKChlcnIpID0+IHtcclxuICBjb25zb2xlLmVycm9yKCfinYwgRXJyb3Igc2VlZGluZyBkYXRhOicsIGVycik7XHJcbn0pO1xyXG4iXX0=